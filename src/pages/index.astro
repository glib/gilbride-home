---
import BaseLayout from '../layouts/BaseLayout.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import Container from '../components/Container.astro';
import PostCard from '../components/PostCard.astro';
import FeaturedPostCard from '../components/FeaturedPostCard.astro';
import PostTimeline from '../components/PostTimeline.astro';
import { getCollection } from 'astro:content';
import { createPostSummary } from '../utils/contentSummary';
import { calculateReadingTime } from '../utils/readingTime';

const posts = await Promise.all(
  (await getCollection('blog', ({ slug }) => {
    if (import.meta.env.DEV) {
      return true; // Show all posts including drafts in development
    }
    return !slug.startsWith('drafts/'); // Exclude drafts in production
  }))
    .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf())
    .map(async (post) => {
      const { Content } = await post.render();
      const { summary } = createPostSummary(post.body, 400);
      const readingTime = calculateReadingTime(post.body);
      return { ...post, Content, summary, readingTime };
    })
);

// Featured posts (first 5 most recent)
const featuredPosts = posts.slice(0, 5);

// All posts for timeline
const timelinePosts = posts;
---

<BaseLayout 
  title="Work From Loam - Remote Work & Mountain Biking"
  description="A blog and YouTube channel about remote work in tech, game development, and mountain biking adventures."
>
  <Header currentPath="/" />

  <main>
    <Container class="py-8">
      <!-- Browse All Posts Link -->
      <div class="flex justify-end mb-6">
        <a 
          href="/posts" 
          class="inline-flex items-center text-sm font-heading font-medium text-highlight hover:text-highlight/80 transition-colors"
        >
          Browse all posts
          <svg class="w-4 h-4 ml-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"/>
          </svg>
        </a>
      </div>

      <!-- Main Content Grid: Posts Column + Timeline Column -->
      {featuredPosts.length > 0 && (
        <div class="grid lg:grid-cols-3 gap-8">
          <!-- Posts Column (Main + Secondary Posts + CTA) -->
          <div class="lg:col-span-2 space-y-8">
            <!-- Featured Post (Latest) -->
            <PostCard 
              slug={featuredPosts[0].slug}
              title={featuredPosts[0].data.title}
              pubDate={featuredPosts[0].data.pubDate}
              tags={featuredPosts[0].data.tags}
              youtubeId={featuredPosts[0].data.youtubeId}
              heroImage={featuredPosts[0].data.heroImage}
              summary={featuredPosts[0].summary}
              readingTime={featuredPosts[0].readingTime}
              class="border-l-4 border-l-highlight bg-secondary/30 p-6 rounded-r-lg"
            />
            
            <!-- Secondary Featured Posts -->
            {featuredPosts.length > 1 && (
              <div class="space-y-6">
                <!-- First Row: 2 posts -->
                <div class="grid md:grid-cols-2 gap-6">
                  {featuredPosts.slice(1, 3).map((post) => (
                    <FeaturedPostCard 
                      slug={post.slug}
                      title={post.data.title}
                      youtubeId={post.data.youtubeId}
                      heroImage={post.data.heroImage}
                    />
                  ))}
                </div>
                
                <!-- Second Row: 2 more posts if available -->
                {featuredPosts.length > 3 && (
                  <div class="grid md:grid-cols-2 gap-6">
                    {featuredPosts.slice(3, 5).map((post) => (
                      <FeaturedPostCard 
                        slug={post.slug}
                        title={post.data.title}
                        youtubeId={post.data.youtubeId}
                        heroImage={post.data.heroImage}
                      />
                    ))}
                  </div>
                )}
              </div>
            )}
            
          </div>
          
          <!-- Timeline Column (Extended) -->
          <div class="lg:col-span-1">
            <PostTimeline posts={timelinePosts} limit={15} />
          </div>
        </div>
      )}
    </Container>
  </main>

  <Footer />
</BaseLayout>
---
import BaseLayout from '../layouts/BaseLayout.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import Container from '../components/Container.astro';
import PostCard from '../components/PostCard.astro';
import FilterSidebar from '../components/FilterSidebar.astro';
import { getCollection } from 'astro:content';
import { formatDate } from '../utils/date';
import { createPostSummary } from '../utils/contentSummary';
import { calculateReadingTime } from '../utils/readingTime';

const posts = await Promise.all(
  (await getCollection('blog', ({ data }) => import.meta.env.PROD ? !data.draft : true))
    .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf())
    .map(async (post) => {
      const { Content } = await post.render();
      const { summary } = createPostSummary(post.body, 400);
      const readingTime = calculateReadingTime(post.body);
      return { ...post, Content, summary, readingTime };
    })
);

// Get all unique tags
const allTags = [...new Set(posts.flatMap(post => post.data.tags || []))].sort();
---

<BaseLayout 
  title="Work From Loam - Remote Work & Mountain Biking"
  description="A blog and YouTube channel about remote work in tech, game development, and mountain biking adventures."
>
  <Header currentPath="/" />

  <main>
    <Container class="py-8">
    <div class="flex flex-col lg:flex-row gap-8">
      <!-- Posts List -->
      <div class="flex-1 lg:max-w-4xl space-y-8 lg:space-y-16">
      {posts.map((post) => (
        <PostCard 
          slug={post.slug}
          title={post.data.title}
          pubDate={post.data.pubDate}
          tags={post.data.tags}
          youtubeId={post.data.youtubeId}
          heroImage={post.data.heroImage}
          summary={post.summary}
          readingTime={post.readingTime}
        />
      ))}
      </div>

      <!-- Tag Filter Sidebar -->
      <FilterSidebar tags={allTags} />
    </div>
    </Container>
  </main>

  <Footer />
</BaseLayout>

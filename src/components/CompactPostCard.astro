---
import MediaThumbnail from './MediaThumbnail.astro';
import PostMetadata from './PostMetadata.astro';

export interface Props {
  /**
   * Post slug for URL generation
   */
  slug: string;
  /**
   * Post title
   */
  title: string;
  /**
   * Publication date
   */
  pubDate: Date;
  /**
   * Post tags
   */
  tags?: string[];
  /**
   * YouTube video ID (optional)
   */
  youtubeId?: string;
  /**
   * Hero image URL (optional)
   */
  heroImage?: string;
  /**
   * Reading time in minutes
   */
  readingTime?: number;
  /**
   * Additional CSS classes to apply
   */
  class?: string;
}

const { 
  slug, 
  title, 
  pubDate, 
  tags = [], 
  youtubeId, 
  heroImage, 
  readingTime,
  class: className = '' 
} = Astro.props;

const postUrl = `/blog/${slug}/`;
---

<article 
  class={`compact-post-card bg-secondary rounded-lg border border-tertiary p-4 hover:border-highlight/40 transition-all duration-200 group ${className}`}
  data-tags={JSON.stringify(tags)}
>
  <div class="flex gap-4">
    <!-- Thumbnail Section -->
    <div class="flex-shrink-0 w-24 h-24 sm:w-28 sm:h-28">
      <MediaThumbnail 
        title={title}
        youtubeId={youtubeId}
        heroImage={heroImage}
        href={postUrl}
        class="w-full h-full rounded-md overflow-hidden"
      />
    </div>
    
    <!-- Content Section -->
    <div class="flex-1 min-w-0 flex flex-col justify-between">
      <div>
        <h2 class="text-lg sm:text-xl font-heading font-semibold text-text-primary line-clamp-2 mb-2 group-hover:text-highlight transition-colors leading-tight">
          <a href={postUrl}>
            {title}
          </a>
        </h2>
        
        <PostMetadata 
          pubDate={pubDate}
          tags={tags}
          readingTime={readingTime}
          class="mb-3"
        />
      </div>
      
      <div class="flex justify-between items-center">
        <a
          href={postUrl}
          class="inline-flex items-center text-sm font-heading font-medium text-highlight hover:text-highlight/80 transition-colors group/link"
        >
          Read article
          <svg class="w-4 h-4 ml-1 group-hover/link:translate-x-0.5 transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"/>
          </svg>
        </a>
      </div>
    </div>
  </div>
</article>

<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>
---
export interface Props {
  /**
   * Array of all available tags
   */
  tags: string[];
  /**
   * Additional CSS classes to apply
   */
  class?: string;
}

const { tags, class: className = '' } = Astro.props;
---

<aside class={`w-full lg:w-64 lg:sticky lg:top-24 h-fit order-first lg:order-last mb-6 lg:mb-0 ${className}`}>
  <div class="bg-secondary rounded-lg p-3 lg:p-6 border border-tertiary"
    <h3 class="text-base lg:text-lg font-heading font-medium lg:font-semibold text-text-primary mb-3 lg:mb-4">Filter by Topic</h3>
    
    <div class="flex flex-wrap gap-2 lg:space-y-3 lg:flex-col lg:gap-0">
      <button 
        class="tag-filter active px-3 py-1 lg:py-2 rounded-md text-xs lg:text-sm font-medium bg-highlight text-primary hover:bg-highlight/80 transition-colors lg:w-full lg:text-left"
        data-tag="all"
      >
        All Posts
      </button>
      
      {tags.map((tag) => (
        <button 
          class="tag-filter px-3 py-1 lg:py-2 rounded-md text-xs lg:text-sm text-text-primary hover:bg-accent hover:text-highlight transition-colors lg:w-full lg:text-left"
          data-tag={tag}
        >
          #{tag}
        </button>
      ))}
    </div>
  </div>
</aside>

<script>
  // Tag filtering functionality
  document.addEventListener('DOMContentLoaded', function() {
    const tagButtons = document.querySelectorAll('.tag-filter');
    const postCards = document.querySelectorAll('.post-card');
    
    tagButtons.forEach(button => {
      button.addEventListener('click', function() {
        const selectedTag = this.dataset.tag;
        
        // Update button states
        tagButtons.forEach(btn => {
          btn.classList.remove('active', 'bg-highlight', 'bg-highlight/80', 'lg:bg-highlight', 'text-primary');
          btn.classList.add('text-text-primary');
        });
        
        this.classList.remove('text-text-primary');
        this.classList.add('active', 'bg-highlight', 'text-primary');
        
        // Filter posts
        postCards.forEach(card => {
          const postTags = JSON.parse(card.dataset.tags);
          
          if (selectedTag === 'all' || postTags.includes(selectedTag)) {
            card.style.display = 'block';
          } else {
            card.style.display = 'none';
          }
        });
      });
    });
  });
</script>
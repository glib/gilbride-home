---
import { formatDate } from '../utils/date';

export interface Props {
  /**
   * Array of posts for timeline
   */
  posts: Array<{
    slug: string;
    data: {
      title: string;
      pubDate: Date;
      heroImage?: string;
      youtubeId?: string;
    };
  }>;
  /**
   * Maximum number of posts to show
   */
  limit?: number;
  /**
   * Additional CSS classes to apply
   */
  class?: string;
}

const { posts, limit = 10, class: className = '' } = Astro.props;
const timelinePosts = posts.slice(0, limit);
---

<aside class={`w-full h-fit ${className}`}>
  <div class="bg-secondary rounded-lg p-4 lg:p-6 border border-tertiary">
    <h3 class="text-lg font-heading font-semibold text-text-primary mb-4 pb-3 border-b border-tertiary">
      Latest Posts
    </h3>
    
    <div class="space-y-4">
      {timelinePosts.map((post) => {
        const postUrl = `/blog/${post.slug}/`;
        return (
          <article class="group">
            <a href={postUrl} class="block">
              <div class="flex gap-3">
                <!-- Thumbnail -->
                <div class="flex-shrink-0 w-16 h-16 bg-tertiary rounded-lg overflow-hidden">
                  {post.data.youtubeId ? (
                    <img 
                      src={`https://img.youtube.com/vi/${post.data.youtubeId}/mqdefault.jpg`}
                      alt={post.data.title}
                      class="w-full h-full object-cover transition-transform group-hover:scale-105"
                      loading="lazy"
                    />
                  ) : post.data.heroImage ? (
                    <img 
                      src={post.data.heroImage}
                      alt={post.data.title}
                      class="w-full h-full object-cover transition-transform group-hover:scale-105"
                      loading="lazy"
                    />
                  ) : (
                    <div class="w-full h-full bg-accent flex items-center justify-center">
                      <svg class="w-6 h-6 text-text-muted" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M19 20H5a2 2 0 01-2-2V6a2 2 0 012-2h10a2 2 0 012 2v1m2 13a2 2 0 01-2-2V7m2 13a2 2 0 002-2V9.5a2 2 0 00-2-2h-2m-4-3H9M7 16h6M7 8h6v4H7V8z" />
                      </svg>
                    </div>
                  )}
                </div>
                
                <!-- Content -->
                <div class="flex-1 min-w-0">
                  <h4 class="text-sm font-heading font-medium text-text-primary line-clamp-2 group-hover:text-highlight transition-colors leading-tight mb-1">
                    {post.data.title}
                  </h4>
                  <time 
                    datetime={post.data.pubDate.toISOString()}
                    class="text-xs text-text-muted font-heading"
                  >
                    {formatDate(post.data.pubDate)}
                  </time>
                </div>
              </div>
            </a>
          </article>
        );
      })}
    </div>
    
    <div class="mt-6 pt-4 border-t border-tertiary">
      <a 
        href="/posts" 
        class="inline-flex items-center text-sm font-heading font-medium text-highlight hover:text-highlight/80 transition-colors"
      >
        View all posts
        <svg class="w-4 h-4 ml-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"/>
        </svg>
      </a>
    </div>
  </div>
</aside>

<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>